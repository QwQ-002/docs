import{_ as e,I as i,c as l,o as p,ai as h,J as a}from"./chunks/framework.sqtICQw5.js";const y=JSON.parse('{"title":"构建环境","description":"","frontmatter":{},"headers":[],"relativePath":"development/setup-environment.md","filePath":"development/setup-environment.md"}'),k={name:"development/setup-environment.md"};function d(o,s,r,g,c,E){const t=i("NolebaseGitContributors"),n=i("NolebaseGitChangelog");return p(),l("div",null,[s[0]||(s[0]=h(`<h1 id="构建环境" tabindex="-1">构建环境 <a class="header-anchor" href="#构建环境" aria-label="Permalink to “构建环境”">​</a></h1><p>从现在开始，你将从头开始开发一个 QwQNT 框架插件。</p><p>该节内容将会简要介绍如何构建一个插件开发环境。</p><h2 id="使用模板" tabindex="-1">使用模板 <a class="header-anchor" href="#使用模板" aria-label="Permalink to “使用模板”">​</a></h2><p>QwQNT 框架并未提供官方实现的插件模板。</p><p>下列均为社区模板，出现任何问题均与 QwQNT 框架官方无关。</p><h3 id="adproqwq-模板" tabindex="-1">adproqwq 模板 <a class="header-anchor" href="#adproqwq-模板" aria-label="Permalink to “adproqwq 模板”">​</a></h3><p><a href="https://github.com/adproqwq/QwQNT-PluginTemplate-Vite-pnpm/" target="_blank" rel="noreferrer">点击查看</a></p><p>该模板由 <a href="https://github.com/adproqwq/" target="_blank" rel="noreferrer">@adproqwq</a> 提供。</p><p>该模板完全为 Typescript 设计，采用 pnpm + Vite + Oxc 开发链。</p><h3 id="xiyuesaves-模板" tabindex="-1">xiyuesaves 模板 <a class="header-anchor" href="#xiyuesaves-模板" aria-label="Permalink to “xiyuesaves 模板”">​</a></h3><p><a href="https://github.com/xiyuesaves/ts-plugin-template/" target="_blank" rel="noreferrer">点击查看</a></p><p>该模板由 <a href="https://github.com/xiyuesaves/" target="_blank" rel="noreferrer">@xiyuesaves</a> 提供。</p><p>该模板完全为 Typescript 设计，采用 pnpm 作为包管理器。</p><p>该模板可用于开发 QwQNT 框架与 LiteLoaderQQNT 框架通用插件。</p><h2 id="手动构建" tabindex="-1">手动构建 <a class="header-anchor" href="#手动构建" aria-label="Permalink to “手动构建”">​</a></h2><p>我们使用 Typescript 为例。</p><p>我们假设你已经完成了项目的初始化。</p><h3 id="package-json" tabindex="-1">package.json <a class="header-anchor" href="#package-json" aria-label="Permalink to “package.json”">​</a></h3><p>首先，请在 package.json 中添加 QwQNT 框架官方的 schema 。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-60" id="tab-61" checked><label data-title="package.json" for="tab-61">package.json</label></div><div class="blocks"><div class="language-json active"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark has-diff" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line diff add"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://raw.githubusercontent.com/qwqnt-community/types/main/plugin.schema.json&quot;</span></span></code></pre></div></div></div><p>然后请按照<a href="/docs/development/development-standards.html">开发规范</a>填写好 name 等字段，这里不做赘述。</p><p>比较重要的是，虽然 QwQNT 框架允许加载 esm ，但是我们仍然建议打包为 cjs 。</p><p>下面是 qwqnt 字段的介绍：</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-72" id="tab-73" checked><label data-title="package.json" for="tab-73">package.json</label></div><div class="blocks"><div class="language-json active"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;qwqnt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 插件显示的名字</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;inject&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 插件主进程入口文件</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;preload&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 插件 preload 入口文件</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;renderer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 插件渲染进程入口文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 插件的依赖，这不同于 npm 的依赖，这里是对其他插件的依赖</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;plugin1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 必须依赖</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;plugin2?&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^1.0.0&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 可选依赖</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><h3 id="tsconfig" tabindex="-1">tsconfig <a class="header-anchor" href="#tsconfig" aria-label="Permalink to “tsconfig”">​</a></h3><p>由于 Electron 项目的特殊性，我们建议你将 tsconfig.json 拆分为两个文件分别对应使用 node 的主进程和使用 web 的 preload 和渲染进程。</p><p>假设你将其拆分为 tsconfig.node.json 和 tsconfig.web.json 。</p><p>请执行下列命令以安装 QwQNT 框架官方核心类型定义库。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-87" id="tab-88" checked><label data-title="npm" for="tab-88">npm</label><input type="radio" name="group-87" id="tab-89"><label data-title="pnpm" for="tab-89">pnpm</label></div><div class="blocks"><div class="language-sh active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github:qwqnt-community/types</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github:qwqnt-community/types</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div></div></div><p>然后再修改两个 tsconfig.*.json 文件。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-94" id="tab-95" checked><label data-title="tsconfig.node.json" for="tab-95">tsconfig.node.json</label><input type="radio" name="group-94" id="tab-96"><label data-title="tsconfig.web.json" for="tab-96">tsconfig.web.json</label></div><div class="blocks"><div class="language-json active"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark has-diff" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line diff add"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;compilerOptions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span></span>
<span class="line diff add"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;types&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@qwqnt/types/main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span></span></code></pre></div><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark has-diff" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line diff add"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;compilerOptions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span></span>
<span class="line diff add"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;types&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@qwqnt/types/preload&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@qwqnt/types/renderer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span></span></code></pre></div></div></div><p>在 tsconfig.json 中引入这两个文件：</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-101" id="tab-102" checked><label data-title="tsconfig.json" for="tab-102">tsconfig.json</label></div><div class="blocks"><div class="language-json active"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark has-diff" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line diff add"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;references&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./tsconfig.node.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, </span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./tsconfig.web.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span></span></code></pre></div></div></div><p>你也可以再添加 @electron-toolkit/tsconfig 包，这是可选的。</p><p>如果你添加了 @electron-toolkit/tsconfig 包，那么你需要在上面的基础上添加：</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-110" id="tab-111" checked><label data-title="tsconfig.node.json" for="tab-111">tsconfig.node.json</label><input type="radio" name="group-110" id="tab-112"><label data-title="tsconfig.web.json" for="tab-112">tsconfig.web.json</label></div><div class="blocks"><div class="language-json active"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark has-diff" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line diff add"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;extends&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@electron-toolkit/tsconfig/tsconfig.node.json&quot;</span></span></code></pre></div><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark has-diff" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line diff add"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;extends&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@electron-toolkit/tsconfig/tsconfig.web.json&quot;</span></span></code></pre></div></div></div><h3 id="依赖" tabindex="-1">依赖 <a class="header-anchor" href="#依赖" aria-label="Permalink to “依赖”">​</a></h3><p>我们推荐使用 electron-vite 包进行插件的编译工作。</p><p>具体请参照<a href="https://electron-vite.github.io/" target="_blank" rel="noreferrer">官方文档</a>进行对应配置。</p><p>对于打包工作，我们推荐使用 unplugin-zip-pack 包。</p><p>我们假设你使用 electron.vite.config.ts 配置 electron-vite 。</p><p>使用 unplugin-zip-pack 插件需要完成下列工作。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-132" id="tab-133" checked><label data-title="electron.vite.config.ts" for="tab-133">electron.vite.config.ts</label></div><div class="blocks"><div class="language-ts active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark has-diff" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;electron-vite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line diff add"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { resolve } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;path&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line diff add"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> viteZipPack </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;unplugin-zip-pack/vite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 其他配置项...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  renderer: {</span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    plugins: [ </span></span>
<span class="line diff add"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      viteZipPack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        in: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(__dirname, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./dist&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        out: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(__dirname, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`./your_plugin_name.zip\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }), </span></span>
<span class="line diff add"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ], </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div></div></div><p>这样你就基本完成了环境的构建。我们将在下节正式开始插件的开发。</p>`,45)),a(t),a(n)])}const b=e(k,[["render",d]]);export{y as __pageData,b as default};
