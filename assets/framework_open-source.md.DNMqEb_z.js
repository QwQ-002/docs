import{_ as n,I as o,c as p,o as s,ai as _,J as t}from"./chunks/framework.sqtICQw5.js";const f=JSON.parse('{"title":"开源策略","description":"","frontmatter":{},"headers":[],"relativePath":"framework/open-source.md","filePath":"framework/open-source.md"}'),c={name:"framework/open-source.md"};function i(l,e,m,d,N,Q){const a=o("NolebaseGitContributors"),r=o("NolebaseGitChangelog");return s(),p("div",null,[e[0]||(e[0]=_('<h1 id="开源策略" tabindex="-1">开源策略 <a class="header-anchor" href="#开源策略" aria-label="Permalink to “开源策略”">​</a></h1><p>QwQNT 插件鉴于前车之鉴，决定将源代码半开源，以防止被轻易地检测，以保证用户账号安全。</p><p>QwQNT 框架的源代码将于位于 Github 的私有仓库中开发。除 QwQNT 管理组成员外不可查阅。</p><p>这不是闭源吗？怎么是半开源？</p><p>QwQNT 框架的分发过程中，用户拿到的 QwQNT 框架的所有前端代码均未进行混淆，甚至留有开发时的注释。</p><p>因此，QwQNT 框架的前端代码对于用户而言是开源的。</p><p>但出于防止被针对性检测的目的，注入器的代码仍然不会开源。</p><p>QwQNT 管理组理解这可能会引起用户对于框架的安全担忧，但管理组经过深思熟虑后仍然决定采用这种方式。</p><p>用别怕，怕别用。</p>',9)),t(a),t(r)])}const u=n(c,[["render",i]]);export{f as __pageData,u as default};
