import{_ as e,c as t,o as r,af as n}from"./chunks/framework.hx-odK46.js";const g=JSON.parse('{"title":"开发规范","description":"","frontmatter":{},"headers":[],"relativePath":"development/development-standards.md","filePath":"development/development-standards.md"}'),o={name:"development/development-standards.md"};function p(s,a,d,i,l,h){return r(),t("div",null,[...a[0]||(a[0]=[n('<h1 id="开发规范" tabindex="-1">开发规范 <a class="header-anchor" href="#开发规范" aria-label="Permalink to “开发规范”">​</a></h1><p>本规范对你的编码风格不做要求。</p><h2 id="用语介绍" tabindex="-1">用语介绍 <a class="header-anchor" href="#用语介绍" aria-label="Permalink to “用语介绍”">​</a></h2><p>本规范部分用语的介绍。</p><h3 id="能愿动词" tabindex="-1">能愿动词 <a class="header-anchor" href="#能愿动词" aria-label="Permalink to “能愿动词”">​</a></h3><p>一般会被加粗显示。</p><p><strong>必须</strong>：强制性规范。你必须完全遵从该条规范。</p><p><strong>应该</strong>：建议性规范。我们建议你遵从该条规范。</p><h2 id="命名" tabindex="-1">命名 <a class="header-anchor" href="#命名" aria-label="Permalink to “命名”">​</a></h2><p>该规范适用范围为：插件命名空间（即 package.json 中 name 值）及 Github 仓库名。</p><p>你的插件命名<strong>必须</strong>采用 <code>kebab-case</code> 命名风格。</p><p>你的插件命名<strong>必须</strong>使用 <code>qwqnt</code> 开头。</p><p>你的插件命名<strong>应该</strong>简洁明了地突出主要功能。</p><p>如：qwqnt-example-plugin 。</p><p>这与 npm 包的命名规范是一致的。</p><h2 id="文档" tabindex="-1">文档 <a class="header-anchor" href="#文档" aria-label="Permalink to “文档”">​</a></h2><p>该规范适用范围为：README 文档及其他的说明文档。</p><p>你的插件的说明文档<strong>必须</strong>包括简单的功能说明。</p><p>你的插件的说明文档<strong>必须</strong>包括所有的前置插件（如果有）。</p><p>你的插件的说明文档<strong>应该</strong>写明使用的开源协议。</p><h2 id="仓库" tabindex="-1">仓库 <a class="header-anchor" href="#仓库" aria-label="Permalink to “仓库”">​</a></h2><p>该规范适用范围为：Git 仓库。</p><p>你的插件的 Git 仓库<strong>必须</strong>拥有反馈渠道（可使用平台提供的渠道或自留渠道）。</p><p>你的插件的 Git 仓库<strong>必须</strong>存储插件的所有代码。</p><p>你的插件的 Git 仓库<strong>必须</strong>拥有可维护的提交记录。</p><p>你的插件的 Git 仓库<strong>应该</strong>可以自动化地构建插件。</p>',26)])])}const m=e(o,[["render",p]]);export{g as __pageData,m as default};
